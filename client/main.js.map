{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/backend-sdk/index.ts","webpack:///./src/app/backend-sdk/lb.config.ts","webpack:///./src/app/backend-sdk/models/BaseModels.ts","webpack:///./src/app/backend-sdk/models/Message.ts","webpack:///./src/app/backend-sdk/models/User.ts","webpack:///./src/app/backend-sdk/models/index.ts","webpack:///./src/app/backend-sdk/services/core/auth.service.ts","webpack:///./src/app/backend-sdk/services/core/base.service.ts","webpack:///./src/app/backend-sdk/services/core/error.service.ts","webpack:///./src/app/backend-sdk/services/core/index.ts","webpack:///./src/app/backend-sdk/services/custom/Message.ts","webpack:///./src/app/backend-sdk/services/custom/SDKModels.ts","webpack:///./src/app/backend-sdk/services/custom/User.ts","webpack:///./src/app/backend-sdk/services/custom/index.ts","webpack:///./src/app/backend-sdk/services/custom/logger.service.ts","webpack:///./src/app/backend-sdk/services/index.ts","webpack:///./src/app/backend-sdk/storage/cookie.browser.ts","webpack:///./src/app/backend-sdk/storage/storage.browser.ts","webpack:///./src/app/backend-sdk/storage/storage.swaps.ts","webpack:///./src/app/common-ui/index.ts","webpack:///./src/app/common-ui/msg-bubble/msg-bubble.component.html","webpack:///./src/app/common-ui/msg-bubble/msg-bubble.component.scss","webpack:///./src/app/common-ui/msg-bubble/msg-bubble.component.ts","webpack:///./src/app/common-ui/msg-compose/msg-compose.component.html","webpack:///./src/app/common-ui/msg-compose/msg-compose.component.scss","webpack:///./src/app/common-ui/msg-compose/msg-compose.component.ts","webpack:///./src/app/common-ui/page-content/page-content.component.html","webpack:///./src/app/common-ui/page-content/page-content.component.scss","webpack:///./src/app/common-ui/page-content/page-content.component.ts","webpack:///./src/app/common-ui/page-footer/page-footer.component.html","webpack:///./src/app/common-ui/page-footer/page-footer.component.scss","webpack:///./src/app/common-ui/page-footer/page-footer.component.ts","webpack:///./src/app/common-ui/page-title/page-title.component.html","webpack:///./src/app/common-ui/page-title/page-title.component.scss","webpack:///./src/app/common-ui/page-title/page-title.component.ts","webpack:///./src/app/pages/login/login.component.html","webpack:///./src/app/pages/login/login.component.scss","webpack:///./src/app/pages/login/login.component.ts","webpack:///./src/app/pages/messaging/messaging.component.html","webpack:///./src/app/pages/messaging/messaging.component.scss","webpack:///./src/app/pages/messaging/messaging.component.ts","webpack:///./src/app/pages/page-not-found/page-not-found.component.html","webpack:///./src/app/pages/page-not-found/page-not-found.component.scss","webpack:///./src/app/pages/page-not-found/page-not-found.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './pages/login/login.component';\nimport { MessagingComponent } from './pages/messaging/messaging.component';\nimport { PageNotFoundComponent } from './pages/page-not-found/page-not-found.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/messaging', pathMatch: 'full' },\n  { path: 'login', component: LoginComponent },\n  { path: 'messaging', component: MessagingComponent },\n  { path: '**', component: PageNotFoundComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\nexport const routingComponents = [\n  LoginComponent,\n  MessagingComponent,\n  PageNotFoundComponent\n];\n","module.exports = \"<router-outlet></router-outlet>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'angular';\n}\n","import { AppRoutingModule } from './app-routing.module';\nimport { SDKBrowserModule } from './backend-sdk';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { routingComponents } from './app-routing.module';\nimport { commonUiComponents } from './common-ui';\nimport { MsgComposeComponent } from './common-ui/msg-compose/msg-compose.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    routingComponents,\n    commonUiComponents,\n    MsgComposeComponent\n  ],\n  imports: [\n    AppRoutingModule,\n    SDKBrowserModule.forRoot(),\n    BrowserModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","/* tslint:disable */\n/**\n* @module SDKModule\n* @author Jonathan Casarrubias <t:@johncasarrubias> <gh:jonathan-casarrubias>\n* @license MIT 2016 Jonathan Casarrubias\n* @version 2.1.0\n* @description\n* The SDKModule is a generated Software Development Kit automatically built by\n* the LoopBack SDK Builder open source module.\n*\n* The SDKModule provides Angular 2 >= RC.5 support, which means that NgModules\n* can import this Software Development Kit as follows:\n*\n*\n* APP Route Module Context\n* ============================================================================\n* import { NgModule }       from '@angular/core';\n* import { BrowserModule }  from '@angular/platform-browser';\n* // App Root \n* import { AppComponent }   from './app.component';\n* // Feature Modules\n* import { SDK[Browser|Node|Native]Module } from './shared/sdk/sdk.module';\n* // Import Routing\n* import { routing }        from './app.routing';\n* @NgModule({\n*  imports: [\n*    BrowserModule,\n*    routing,\n*    SDK[Browser|Node|Native]Module.forRoot()\n*  ],\n*  declarations: [ AppComponent ],\n*  bootstrap:    [ AppComponent ]\n* })\n* export class AppModule { }\n*\n**/\nimport { ErrorHandler } from './services/core/error.service';\nimport { LoopBackAuth } from './services/core/auth.service';\nimport { LoggerService } from './services/custom/logger.service';\nimport { SDKModels } from './services/custom/SDKModels';\nimport { InternalStorage, SDKStorage } from './storage/storage.swaps';\nimport { HttpClientModule } from '@angular/common/http';\nimport { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CookieBrowser } from './storage/cookie.browser';\nimport { StorageBrowser } from './storage/storage.browser';\nimport { UserApi } from './services/custom/User';\nimport { MessageApi } from './services/custom/Message';\n/**\n* @module SDKBrowserModule\n* @description\n* This module should be imported when building a Web Application in the following scenarios:\n*\n*  1.- Regular web application\n*  2.- Angular universal application (Browser Portion)\n*  3.- Progressive applications (Angular Mobile, Ionic, WebViews, etc)\n**/\n@NgModule({\n  imports:      [ CommonModule, HttpClientModule ],\n  declarations: [ ],\n  exports:      [ ],\n  providers:    [\n    ErrorHandler\n  ]\n})\nexport class SDKBrowserModule {\n  static forRoot(internalStorageProvider: any = {\n    provide: InternalStorage,\n    useClass: CookieBrowser\n  }): ModuleWithProviders {\n    return {\n      ngModule  : SDKBrowserModule,\n      providers : [\n        LoopBackAuth,\n        LoggerService,\n        SDKModels,\n        UserApi,\n        MessageApi,\n        internalStorageProvider,\n        { provide: SDKStorage, useClass: StorageBrowser }\n      ]\n    };\n  }\n}\n/**\n* Have Fun!!!\n* - Jon\n**/\nexport * from './models/index';\nexport * from './services/index';\nexport * from './lb.config';\nexport * from './storage/storage.swaps';\nexport { CookieBrowser } from './storage/cookie.browser';\nexport { StorageBrowser } from './storage/storage.browser';\n\n","/* tslint:disable */\n/**\n* @module LoopBackConfig\n* @description\n*\n* The LoopBackConfig module help developers to externally \n* configure the base url and api version for loopback.io\n*\n* Example\n*\n* import { LoopBackConfig } from './sdk';\n* \n* @Component() // No metadata needed for this module\n*\n* export class MyApp {\n*   constructor() {\n*     LoopBackConfig.setBaseURL('http://localhost:3000');\n*     LoopBackConfig.setApiVersion('api');\n*   }\n* }\n**/\nexport class LoopBackConfig {\n  private static path: string = '//0.0.0.0:3000';\n  private static version: string | number = 'api';\n  private static authPrefix: string = '';\n  private static debug: boolean = true;\n  private static filterOn: string = 'headers';\n  private static whereOn: string = 'headers';\n  private static secure: boolean = false;\n  private static withCredentials: boolean = false;\n\n  public static setApiVersion(version: string = 'api'): void {\n    LoopBackConfig.version = version;\n  }\n  \n  public static getApiVersion(): string | number {\n    return LoopBackConfig.version;\n  }\n\n  public static setBaseURL(url: string = '/'): void {\n    LoopBackConfig.path = url;\n  }\n  \n  public static getPath(): string {\n    return LoopBackConfig.path;\n  }\n\n  public static setAuthPrefix(authPrefix: string = ''): void {\n    LoopBackConfig.authPrefix = authPrefix;\n  }\n\n  public static getAuthPrefix(): string {\n    return LoopBackConfig.authPrefix;\n  }\n\n  public static setDebugMode(isEnabled: boolean): void {\n    LoopBackConfig.debug = isEnabled;\n  }\n\n  public static debuggable(): boolean {\n    return LoopBackConfig.debug;\n  }\n\n  public static filterOnUrl(): void {\n    LoopBackConfig.filterOn = 'url';\n  }\n\n  public static filterOnHeaders(): void {\n    LoopBackConfig.filterOn = 'headers';\n  }\n\n  public static whereOnUrl(): void {\n    LoopBackConfig.whereOn = 'url';\n  }\n\n  public static whereOnHeaders(): void {\n    LoopBackConfig.whereOn = 'headers';\n  }\n\n  public static isHeadersFilteringSet(): boolean {\n    return (LoopBackConfig.filterOn === 'headers');\n  }\n\n  public static isHeadersWhereSet(): boolean {\n    return (LoopBackConfig.whereOn === 'headers');\n  }\n\n  public static setSecureWebSockets(): void {\n    LoopBackConfig.secure = true;\n  }\n\n  public static unsetSecureWebSockets(): void {\n    LoopBackConfig.secure = false;\n  }\n\n  public static isSecureWebSocketsSet(): boolean {\n    return LoopBackConfig.secure;\n  }\n\n  public static setRequestOptionsCredentials(withCredentials: boolean = false): void {\n    LoopBackConfig.withCredentials = withCredentials;\n  }\n\n  public static getRequestOptionsCredentials(): boolean {\n    return LoopBackConfig.withCredentials;\n  }\n}\n","/* tslint:disable */\n\n\n\ndeclare var Object: any;\nexport interface LoopBackFilter {\n  fields?: any;\n  include?: any;\n  limit?: any;\n  order?: any;\n  skip?: any;\n  offset?: any;\n  where?: any;\n}\n\nexport interface AccessTokenInterface {\n  \"id\"?: string;\n  \"ttl\"?: number;\n  \"scopes\"?: [\"string\"];\n  \"created\"?: Date;\n  \"userId\"?: string;\n  \"user\"?: any;\n}\n\nexport class AccessToken implements AccessTokenInterface {\n  \"id\": string;\n  \"ttl\": number;\n  \"scopes\": [\"string\"];\n  \"created\": Date;\n  \"userId\": string;\n  \"user\": any;\n  constructor(data?: AccessTokenInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `AccessToken`.\n   */\n  public static getModelName() {\n    return \"AccessToken\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of AccessToken for dynamic purposes.\n  **/\n  public static factory(data: AccessTokenInterface): AccessToken{\n    return new AccessToken(data);\n  }  \n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'AccessToken',\n      plural: 'AccessTokens',\n      properties: {\n        \"id\": {\n          name: 'id',\n          type: 'string'\n        },\n        \"ttl\": {\n          name: 'ttl',\n          type: 'number',\n          default: 1209600\n        },\n        \"scopes\": {\n          name: 'scopes',\n          type: '[\"string\"]'\n        },\n        \"created\": {\n          name: 'created',\n          type: 'Date'\n        },\n        \"userId\": {\n          name: 'userId',\n          type: 'string'\n        },\n      },\n      relations: {\n        user: {\n          name: 'user',\n          type: 'User',\n          model: 'User'\n        },\n      }\n    }\n  }\n}\n\nexport class SDKToken implements AccessTokenInterface {\n  id: any = null;\n  ttl: number = null;\n  scopes: any = null;\n  created: any = null;\n  userId: any = null;\n  user: any = null;\n  rememberMe: boolean = null;\n  constructor(data?: AccessTokenInterface) {\n    Object.assign(this, data);\n  }\n}\n/**\n* This GeoPoint represents both, LoopBack and MongoDB GeoPoint\n**/\nexport interface GeoPoint  {\n    lat?: number;\n    lng?: number;\n    type?: string;\n    coordinates?: number[];\n}\n\nexport interface StatFilter {\n    range: string,\n    custom?: {\n      start: string,\n      end: string\n    },\n    where?: {},\n    groupBy?: string\n}\n","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface MessageInterface {\n  \"content\": string;\n  \"senderId\": string;\n  \"senderName\": string;\n  \"sentOn\": Date;\n  \"id\"?: any;\n}\n\nexport class Message implements MessageInterface {\n  \"content\": string;\n  \"senderId\": string;\n  \"senderName\": string;\n  \"sentOn\": Date;\n  \"id\": any;\n  constructor(data?: MessageInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `Message`.\n   */\n  public static getModelName() {\n    return \"Message\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of Message for dynamic purposes.\n  **/\n  public static factory(data: MessageInterface): Message{\n    return new Message(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'Message',\n      plural: 'messages',\n      path: 'messages',\n      idName: 'id',\n      properties: {\n        \"content\": {\n          name: 'content',\n          type: 'string'\n        },\n        \"senderId\": {\n          name: 'senderId',\n          type: 'string'\n        },\n        \"senderName\": {\n          name: 'senderName',\n          type: 'string'\n        },\n        \"sentOn\": {\n          name: 'sentOn',\n          type: 'Date'\n        },\n        \"id\": {\n          name: 'id',\n          type: 'any'\n        },\n      },\n      relations: {\n      }\n    }\n  }\n}\n","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface UserInterface {\n  \"realm\"?: string;\n  \"username\"?: string;\n  \"email\": string;\n  \"emailVerified\"?: boolean;\n  \"id\"?: any;\n  \"password\"?: string;\n  accessTokens?: any[];\n}\n\nexport class User implements UserInterface {\n  \"realm\": string;\n  \"username\": string;\n  \"email\": string;\n  \"emailVerified\": boolean;\n  \"id\": any;\n  \"password\": string;\n  accessTokens: any[];\n  constructor(data?: UserInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `User`.\n   */\n  public static getModelName() {\n    return \"User\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of User for dynamic purposes.\n  **/\n  public static factory(data: UserInterface): User{\n    return new User(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'User',\n      plural: 'Users',\n      path: 'Users',\n      idName: 'id',\n      properties: {\n        \"realm\": {\n          name: 'realm',\n          type: 'string'\n        },\n        \"username\": {\n          name: 'username',\n          type: 'string'\n        },\n        \"email\": {\n          name: 'email',\n          type: 'string'\n        },\n        \"emailVerified\": {\n          name: 'emailVerified',\n          type: 'boolean'\n        },\n        \"id\": {\n          name: 'id',\n          type: 'any'\n        },\n        \"password\": {\n          name: 'password',\n          type: 'string'\n        },\n      },\n      relations: {\n        accessTokens: {\n          name: 'accessTokens',\n          type: 'any[]',\n          model: '',\n          relationType: 'hasMany',\n                  keyFrom: 'id',\n          keyTo: 'userId'\n        },\n      }\n    }\n  }\n}\n","/* tslint:disable */\nexport * from './User';\nexport * from './Message';\nexport * from './BaseModels';\n\n","/* tslint:disable */\ndeclare var Object: any;\nimport { Injectable, Inject } from '@angular/core';\nimport { InternalStorage } from '../../storage/storage.swaps';\nimport { SDKToken } from '../../models/BaseModels';\n/**\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@mean-expert-official>\n* @module SocketConnection\n* @license MIT\n* @description\n* This module handle socket connections and return singleton instances for each\n* connection, it will use the SDK Socket Driver Available currently supporting\n* Angular 2 for web, NativeScript 2 and Angular Universal.\n**/\n@Injectable()\nexport class LoopBackAuth {\n  /**\n   * @type {SDKToken}\n   **/\n  private token: SDKToken = new SDKToken();\n  /**\n   * @type {string}\n   **/\n  protected prefix: string = '$LoopBackSDK$';\n  /**\n   * @method constructor\n   * @param {InternalStorage} storage Internal Storage Driver\n   * @description\n   * The constructor will initialize the token loading data from storage\n   **/\n  constructor(@Inject(InternalStorage) protected storage: InternalStorage) {\n    this.token.id = this.load('id');\n    this.token.user = this.load('user');\n    this.token.userId = this.load('userId');\n    this.token.created = this.load('created');\n    this.token.ttl = this.load('ttl');\n    this.token.rememberMe = this.load('rememberMe');\n  }\n  /**\n   * @method setRememberMe\n   * @param {boolean} value Flag to remember credentials\n   * @return {void}\n   * @description\n   * This method will set a flag in order to remember the current credentials\n   **/\n  public setRememberMe(value: boolean): void {\n    this.token.rememberMe = value;\n  }\n  /**\n   * @method setUser\n   * @param {any} user Any type of user model\n   * @return {void}\n   * @description\n   * This method will update the user information and persist it if the\n   * rememberMe flag is set.\n   **/\n  public setUser(user: any) {\n    this.token.user = user;\n    this.save();\n  }\n  /**\n   * @method setToken\n   * @param {SDKToken} token SDKToken or casted AccessToken instance\n   * @return {void}\n   * @description\n   * This method will set a flag in order to remember the current credentials\n   **/\n  public setToken(token: SDKToken): void {\n    this.token = Object.assign({}, this.token, token);\n    this.save();\n  }\n  /**\n   * @method getToken\n   * @return {void}\n   * @description\n   * This method will set a flag in order to remember the current credentials.\n   **/\n  public getToken(): SDKToken {\n    return <SDKToken>this.token;\n  }\n  /**\n   * @method getAccessTokenId\n   * @return {string}\n   * @description\n   * This method will return the actual token string, not the object instance.\n   **/\n  public getAccessTokenId(): string {\n    return this.token.id;\n  }\n  /**\n   * @method getCurrentUserId\n   * @return {any}\n   * @description\n   * This method will return the current user id, it can be number or string.\n   **/\n  public getCurrentUserId(): any {\n    return this.token.userId;\n  }\n  /**\n   * @method getCurrentUserData\n   * @return {any}\n   * @description\n   * This method will return the current user instance.\n   **/\n  public getCurrentUserData(): any {\n    return (typeof this.token.user === 'string') ? JSON.parse(this.token.user) : this.token.user;\n  }\n  /**\n   * @method save\n   * @return {boolean} Whether or not the information was saved\n   * @description\n   * This method will save in either local storage or cookies the current credentials.\n   * But only if rememberMe is enabled.\n   **/\n  public save(): boolean {\n      let today = new Date();\n      let expires = new Date(today.getTime() + (this.token.ttl * 1000));\n      this.persist('id', this.token.id, expires);\n      this.persist('user', this.token.user, expires);\n      this.persist('userId', this.token.userId, expires);\n      this.persist('created', this.token.created, expires);\n      this.persist('ttl', this.token.ttl, expires);\n      this.persist('rememberMe', this.token.rememberMe, expires);\n      return true;\n  };\n  /**\n   * @method load\n   * @param {string} prop Property name\n   * @return {any} Any information persisted in storage\n   * @description\n   * This method will load either from local storage or cookies the provided property.\n   **/\n  protected load(prop: string): any {\n    return this.storage.get(`${this.prefix}${prop}`);\n  }\n  /**\n   * @method clear\n   * @return {void}\n   * @description\n   * This method will clear cookies or the local storage.\n   **/\n  public clear(): void {\n    Object.keys(this.token).forEach((prop: string) => this.storage.remove(`${this.prefix}${prop}`));\n    this.token = new SDKToken();\n  }\n  /**\n   * @method persist\n   * @return {void}\n   * @description\n   * This method saves values to storage\n   **/\n  protected persist(prop: string, value: any, expires?: Date): void {\n    try {\n      this.storage.set(\n        `${this.prefix}${prop}`,\n        (typeof value === 'object') ? JSON.stringify(value) : value,\n        this.token.rememberMe?expires:null\n      );\n    }\n    catch (err) {\n      console.error('Cannot access local/session storage:', err);\n    }\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpRequest, HttpParams, HttpResponse, HttpParameterCodec } from '@angular/common/http';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { ErrorHandler } from './error.service';\nimport { LoopBackAuth } from './auth.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackFilter, AccessToken } from '../../models/BaseModels';\nimport { SDKModels } from '../custom/SDKModels';\nimport { Observable, Subject } from 'rxjs';\nimport { catchError, map, filter } from 'rxjs/operators';\n// Making Sure EventSource Type is available to avoid compilation issues.\ndeclare var EventSource: any;\nclass CustomQueryEncoderHelper implements HttpParameterCodec {\n  encodeKey(k: string): string {\n      return encodeURIComponent(k);\n  }\n\n  encodeValue(v: string): string {\n      return encodeURIComponent(v);\n  }\n\n  decodeKey(k: string): string {\n      return decodeURIComponent(k);\n  }\n\n  decodeValue(v: string): string {\n      return decodeURIComponent(v);\n  }\n}\n/**\n* @module BaseLoopBackApi\n* @author Jonathan Casarrubias <@johncasarrubias> <github:jonathan-casarrubias>\n* @author Nikolay Matiushenkov <https://github.com/mnvx>\n* @license MIT\n* @description\n* Abstract class that will be implemented in every custom service automatically built\n* by the sdk builder.\n* It provides the core functionallity for every API call, either by HTTP Calls or by\n* WebSockets.\n**/\n@Injectable()\nexport abstract class BaseLoopBackApi {\n\n  protected path: string;\n  protected model: any;\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    this.model = this.models.get(this.getModelName());\n  }\n  /**\n   * @method request\n   * @param {string}  method      Request method (GET, POST, PUT)\n   * @param {string}  url         Request url (my-host/my-url/:id)\n   * @param {any}     routeParams Values of url parameters\n   * @param {any}     urlParams   Parameters for building url (filter and other)\n   * @param {any}     postBody    Request postBody\n   * @return {Observable<any>}\n   * @description\n   * This is a core method, every HTTP Call will be done from here, every API Service will\n   * extend this class and use this method to get RESTful communication.\n   **/\n  public request(\n    method         : string,\n    url            : string,\n    routeParams    : any = {},\n    urlParams      : any = {},\n    postBody       : any = {},\n    pubsub         : boolean = false,\n    customHeaders? : Function\n  ): Observable<any> {\n    // Transpile route variables to the actual request Values\n    Object.keys(routeParams).forEach((key: string) => {\n      url = url.replace(new RegExp(\":\" + key + \"(\\/|$)\", \"g\"), routeParams[key] + \"$1\")\n    });\n    if (pubsub) {\n      console.info('SDK: PubSub functionality is disabled, generate SDK using -io enabled');\n    } else {\n      let httpParams = new HttpParams({ encoder: new CustomQueryEncoderHelper() });\n      // Headers to be sent\n      let headers: HttpHeaders = new HttpHeaders();\n      headers = headers.append('Content-Type', 'application/json');\n      // Authenticate request\n      headers = this.authenticate(url, headers);\n      // Body fix for built in remote methods using \"data\", \"options\" or \"credentials\n      // that are the actual body, Custom remote method properties are different and need\n      // to be wrapped into a body object\n      let body: any;\n      let postBodyKeys = typeof postBody === 'object' ? Object.keys(postBody) : []\n      if (postBodyKeys.length === 1) {\n        body = postBody[postBodyKeys.shift()];\n      } else {\n        body = postBody;\n      }\n      \n      let queryString: string = '';\n\n      // Separate filter object from url params and add to search query\n      if (urlParams.filter) {\n        if (LoopBackConfig.isHeadersFilteringSet()) {\n          headers = headers.append('filter', JSON.stringify(urlParams.filter));\n        } else {\n          queryString = `?filter=${encodeURIComponent(JSON.stringify(urlParams.filter))}`;\n        }\n        delete urlParams.filter;\n      }\n\n      // Separate where object from url params and add to search query\n      if (urlParams.where) {\n        if (LoopBackConfig.isHeadersWhereSet()) {\n          /**\n          CODE BELOW WILL GENERATE THE FOLLOWING ISSUES:\n          - https://github.com/mean-expert-official/loopback-sdk-builder/issues/356\n          - https://github.com/mean-expert-official/loopback-sdk-builder/issues/328 \n          **/\n          headers = headers.append('where', JSON.stringify(urlParams.where));\n        } else {\n          queryString = `?where=${encodeURIComponent(JSON.stringify(urlParams.where))}`;\n        }\n        delete urlParams.where;\n      }\n    \n      if (typeof customHeaders === 'function') {\n        headers = customHeaders(headers);\n      }\n/* enhancement/configure-where-headers\n      this.searchParams.setJSON(urlParams);\n      let request: Request = new Request(\n        new RequestOptions({\n          headers        : headers,\n          method         : method,\n          url            : `${url}${queryString}`,\n          search         : Object.keys(urlParams).length > 0 ? this.searchParams.getURLSearchParams() : null,\n          body           : body ? JSON.stringify(body) : undefined,\n          withCredentials: LoopBackConfig.getRequestOptionsCredentials()\n        })\n      );\nTODO Fix Merge Conflict */\n      Object.keys(urlParams).forEach(paramKey => {\n        let paramValue = urlParams[paramKey];\n        paramValue = typeof paramValue === 'object' ? JSON.stringify(paramValue) : paramValue;\n        httpParams = httpParams.append(paramKey, paramValue);\n      });\n      let request = new HttpRequest(method, `${url}${queryString}`, body, {\n        headers        : headers,\n        params         : httpParams,\n        withCredentials: LoopBackConfig.getRequestOptionsCredentials()\n      });\n      return this.http.request(request).pipe(\n        filter(event => event instanceof HttpResponse),\n        map((res: HttpResponse<any>) => res.body),\n        catchError((e) => this.errorHandler.handleError(e))\n      );\n    }\n  }\n  /**\n   * @method authenticate\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @param {string} url Server URL\n   * @param {Headers} headers HTTP Headers\n   * @return {void}\n   * @description\n   * This method will try to authenticate using either an access_token or basic http auth\n   */\n  public authenticate<T>(url: string, headers: HttpHeaders): HttpHeaders {\n    if (this.auth.getAccessTokenId()) {\n      headers = headers.append(\n        'Authorization',\n        LoopBackConfig.getAuthPrefix() + this.auth.getAccessTokenId()\n      );\n    }\n\n    return headers;\n  }\n  /**\n   * @method create\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @param {T} data Generic data type\n   * @return {Observable<T>}\n   * @description\n   * Generic create method\n   */\n  public create<T>(data: T, customHeaders?: Function): Observable<T> {\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path\n    ].join('/'), undefined, undefined, { data }, null, customHeaders)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method createMany\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @param {T[]} data Generic data type array\n   * @return {Observable<T[]>}\n   * @description\n   * Generic create many method\n   */\n  public createMany<T>(data: T[], customHeaders?: Function): Observable<T[]> {\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path\n    ].join('/'), undefined, undefined, { data }, null, customHeaders)\n    .pipe(map((datum: T[]) => datum.map((data: T) => this.model.factory(data))));\n  }\n  /**\n   * @method findById\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @param {any} data Generic data type\n   * @return {Observable<T>}\n   * @description\n   * Generic findById method\n   */\n  public findById<T>(id: any, filter: LoopBackFilter = {}, customHeaders?: Function): Observable<T> {\n    let _urlParams: any = {};\n    if (filter) _urlParams.filter = filter;\n    return this.request('GET', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      ':id'\n    ].join('/'), { id }, _urlParams, undefined, null, customHeaders)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method find\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T[+>}\n   * @description\n   * Generic find method\n   */\n  public find<T>(filter: LoopBackFilter = {}, customHeaders?: Function): Observable<T[]> {\n    return this.request('GET', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path\n    ].join('/'), undefined, { filter }, undefined, null, customHeaders)\n    .pipe(map((datum: T[]) => datum.map((data: T) => this.model.factory(data))));\n  }\n  /**\n   * @method exists\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T[]>}\n   * @description\n   * Generic exists method\n   */\n  public exists<T>(id: any, customHeaders?: Function): Observable<T> {\n    return this.request('GET', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      ':id/exists'\n    ].join('/'), { id }, undefined, undefined, null, customHeaders);\n  }\n  /**\n   * @method findOne\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic findOne method\n   */\n  public findOne<T>(filter: LoopBackFilter = {}, customHeaders?: Function): Observable<T> {\n    return this.request('GET', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      'findOne'\n    ].join('/'), undefined, { filter }, undefined, null, customHeaders)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method updateAll\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T[]>}\n   * @description\n   * Generic updateAll method\n   */\n  public updateAll<T>(where: any = {}, data: T, customHeaders?: Function): Observable<{ count: 'number' }> {\n    let _urlParams: any = {};\n    if (where) _urlParams.where = where;\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      'update'\n    ].join('/'), undefined, _urlParams, { data }, null, customHeaders);\n  }\n  /**\n   * @method deleteById\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic deleteById method\n   */\n  public deleteById<T>(id: any, customHeaders?: Function): Observable<T> {\n    return this.request('DELETE', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      ':id'\n    ].join('/'), { id }, undefined, undefined, null, customHeaders)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method count\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<{ count: number }>}\n   * @description\n   * Generic count method\n   */\n  public count(where: any = {}, customHeaders?: Function): Observable<{ count: number }> {\n    let _urlParams: any = {};\n    if (where) _urlParams.where = where;\n    return this.request('GET', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      'count'\n    ].join('/'), undefined, _urlParams, undefined, null, customHeaders);\n  }\n  /**\n   * @method updateAttributes\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic updateAttributes method\n   */\n  public updateAttributes<T>(id: any, data: T, customHeaders?: Function): Observable<T> {\n    return this.request('PUT', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      ':id'\n    ].join('/'), { id }, undefined, { data }, null, customHeaders)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method upsert\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic upsert method\n   */\n  public upsert<T>(data: any = {}, customHeaders?: Function): Observable<T> {\n    return this.request('PUT', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n    ].join('/'), undefined, undefined, { data }, null, customHeaders)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method upsertPatch\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic upsert method using patch http method\n   */\n  public upsertPatch<T>(data: any = {}, customHeaders?: Function): Observable<T> {\n    return this.request('PATCH', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n    ].join('/'), undefined, undefined, { data }, null, customHeaders)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method upsertWithWhere\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic upsertWithWhere method\n   */\n  public upsertWithWhere<T>(where: any = {}, data: any = {}, customHeaders?: Function): Observable<T> {\n    let _urlParams: any = {};\n    if (where) _urlParams.where = where;\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      'upsertWithWhere'\n    ].join('/'), undefined, _urlParams, { data }, null, customHeaders)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method replaceOrCreate\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic replaceOrCreate method\n   */\n  public replaceOrCreate<T>(data: any = {}, customHeaders?: Function): Observable<T> {\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      'replaceOrCreate'\n    ].join('/'), undefined, undefined, { data }, null, customHeaders)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method replaceById\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic replaceById method\n   */\n  public replaceById<T>(id: any, data: any = {}, customHeaders?: Function): Observable<T> {\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      ':id', 'replace'\n    ].join('/'), { id }, undefined, { data }, null, customHeaders)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method createChangeStream\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<any>}\n   * @description\n   * Generic createChangeStream method\n   */\n  public createChangeStream(): Observable<any> {\n    let subject = new Subject();\n    if (typeof EventSource !== 'undefined') {\n      let emit   = (msg: any) => subject.next(JSON.parse(msg.data));\n      var source = new EventSource([\n        LoopBackConfig.getPath(),\n        LoopBackConfig.getApiVersion(),\n        this.model.getModelDefinition().path,\n        'change-stream'\n      ].join('/'));\n      source.addEventListener('data', emit);\n      source.onerror = emit;\n    } else {\n      console.warn('SDK Builder: EventSource is not supported'); \n    }\n    return subject.asObservable();\n  }\n  /**\n   * @method getModelName\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {string}\n   * @description\n   * Abstract getModelName method\n   */\n  abstract getModelName(): string;\n}\n","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\n/**\n * Default error handler\n */\n@Injectable()\nexport class ErrorHandler {\n  public handleError(errorResponse: HttpErrorResponse): Observable<never> {\n    return throwError(errorResponse.error.error || 'Server error');\n  }\n}\n","/* tslint:disable */\nexport * from './auth.service';\nexport * from './error.service';\nexport * from './base.service';\n\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Message } from '../../models/Message';\n\n\n/**\n * Api services for the `Message` model.\n */\n@Injectable()\nexport class MessageApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  models, auth, errorHandler);\n  }\n\n  /**\n   * Patch an existing model instance or insert a new one into the data source.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - Model instance data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Message` object.)\n   * </em>\n   */\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/messages\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch attributes for a model instance and persist it into the data source.\n   *\n   * @param {any} id Message id\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - An object of model property name/value pairs\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Message` object.)\n   * </em>\n   */\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/messages/:id\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `Message`.\n   */\n  public getModelName() {\n    return \"Message\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nimport { User } from '../../models/User';\nimport { Message } from '../../models/Message';\n\nexport interface Models { [name: string]: any }\n\n@Injectable()\nexport class SDKModels {\n\n  private models: Models = {\n    User: User,\n    Message: Message,\n    \n  };\n\n  public get(modelName: string): any {\n    return this.models[modelName];\n  }\n\n  public getAll(): Models {\n    return this.models;\n  }\n\n  public getModelNames(): string[] {\n    return Object.keys(this.models);\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter, SDKToken, AccessToken } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { User } from '../../models/User';\n\n\n/**\n * Api services for the `User` model.\n */\n@Injectable()\nexport class UserApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  models, auth, errorHandler);\n  }\n\n  /**\n   * Find a related item by id for accessTokens.\n   *\n   * @param {any} id User id\n   *\n   * @param {any} fk Foreign key for accessTokens\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `User` object.)\n   * </em>\n   */\n  public findByIdAccessTokens(id: any, fk: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/:id/accessTokens/:fk\";\n    let _routeParams: any = {\n      id: id,\n      fk: fk\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Delete a related item by id for accessTokens.\n   *\n   * @param {any} id User id\n   *\n   * @param {any} fk Foreign key for accessTokens\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public destroyByIdAccessTokens(id: any, fk: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"DELETE\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/:id/accessTokens/:fk\";\n    let _routeParams: any = {\n      id: id,\n      fk: fk\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Update a related item by id for accessTokens.\n   *\n   * @param {any} id User id\n   *\n   * @param {any} fk Foreign key for accessTokens\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `User` object.)\n   * </em>\n   */\n  public updateByIdAccessTokens(id: any, fk: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PUT\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/:id/accessTokens/:fk\";\n    let _routeParams: any = {\n      id: id,\n      fk: fk\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Queries accessTokens of User.\n   *\n   * @param {any} id User id\n   *\n   * @param {object} filter \n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `User` object.)\n   * </em>\n   */\n  public getAccessTokens(id: any, filter: LoopBackFilter = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/:id/accessTokens\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof filter !== 'undefined' && filter !== null) _urlParams.filter = filter;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Creates a new instance in accessTokens of this model.\n   *\n   * @param {any} id User id\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `User` object.)\n   * </em>\n   */\n  public createAccessTokens(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/:id/accessTokens\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Deletes all accessTokens of this model.\n   *\n   * @param {any} id User id\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public deleteAccessTokens(id: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"DELETE\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/:id/accessTokens\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Counts accessTokens of User.\n   *\n   * @param {any} id User id\n   *\n   * @param {object} where Criteria to match model instances\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * Data properties:\n   *\n   *  - `count` – `{number}` - \n   */\n  public countAccessTokens(id: any, where: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/:id/accessTokens/count\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof where !== 'undefined' && where !== null) _urlParams.where = where;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch an existing model instance or insert a new one into the data source.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - Model instance data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `User` object.)\n   * </em>\n   */\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch attributes for a model instance and persist it into the data source.\n   *\n   * @param {any} id User id\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - An object of model property name/value pairs\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `User` object.)\n   * </em>\n   */\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/:id\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Login a user with username/email and password.\n   *\n   * @param {string} include Related objects to include in the response. See the description of return value for more details.\n   *   Default value: `user`.\n   *\n   *  - `rememberMe` - `boolean` - Whether the authentication credentials\n   *     should be remembered in localStorage across app/browser restarts.\n   *     Default: `true`.\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * The response body contains properties of the AccessToken created on login.\n   * Depending on the value of `include` parameter, the body may contain additional properties:\n   * \n   *   - `user` - `U+007BUserU+007D` - Data of the currently logged in user. (`include=user`)\n   * \n   *\n   */\n  public login(credentials: any, include: any = 'user', rememberMe: boolean = true, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/login\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      credentials: credentials\n    };\n    let _urlParams: any = {};\n    if (typeof include !== 'undefined' && include !== null) _urlParams.include = include;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders)\n      .pipe(\n        map(\n        (response: any) => {\n          response.ttl = parseInt(response.ttl);\n          response.rememberMe = rememberMe;\n          this.auth.setToken(response);\n          return response;\n        }\n      )\n      );\n      return result;\n      \n  }\n\n  /**\n   * Logout a user with access token.\n   *\n   * @param {object} data Request data.\n   *\n   * This method does not accept any data. Supply an empty object.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public logout(customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/logout\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n       _urlParams.access_token = this.auth.getAccessTokenId();\n    this.auth.clear(); \n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Trigger user's identity verification with configured verifyOptions\n   *\n   * @param {any} id User id\n   *\n   * @param {object} data Request data.\n   *\n   * This method does not accept any data. Supply an empty object.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public verify(id: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/:id/verify\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Confirm a user registration with identity verification token.\n   *\n   * @param {string} uid \n   *\n   * @param {string} token \n   *\n   * @param {string} redirect \n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public confirm(uid: any, token: any, redirect: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/confirm\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof uid !== 'undefined' && uid !== null) _urlParams.uid = uid;\n    if (typeof token !== 'undefined' && token !== null) _urlParams.token = token;\n    if (typeof redirect !== 'undefined' && redirect !== null) _urlParams.redirect = redirect;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Reset password for a user with email.\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public resetPassword(options: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/reset\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      options: options\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Change a user's password.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `oldPassword` – `{string}` - \n   *\n   *  - `newPassword` – `{string}` - \n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public changePassword(oldPassword: any, newPassword: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/change-password\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: {\n        oldPassword: oldPassword,\n        newPassword: newPassword\n      }\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Reset user's password via a password-reset token.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `newPassword` – `{string}` - \n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public setPassword(newPassword: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/reset-password\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: {\n        newPassword: newPassword\n      }\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Creates a new instance in accessTokens of this model.\n   *\n   * @param {any} id User id\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `User` object.)\n   * </em>\n   */\n  public createManyAccessTokens(id: any, data: any[] = [], customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/:id/accessTokens\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n  /**\n   * @ngdoc method\n   * @name sdk.User#getCurrent\n   * @methodOf sdk.User\n   *\n   * @description\n   *\n   * Get data of the currently logged user. Fail with HTTP result 401\n   * when there is no user logged in.\n   *\n   * @returns object An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   */\n  public getCurrent(filter: LoopBackFilter = {}): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() + \"/Users\" + \"/:id\";\n    let id: any = this.auth.getCurrentUserId();\n    if (id == null)\n    id = '__anonymous__';\n    let _routeParams: any = { id: id };\n    let _urlParams: any = {};\n    let _postBody: any = {};\n    if (filter) _urlParams.filter = filter;\n    return this.request(_method, _url, _routeParams, _urlParams, _postBody);\n  }\n  /**\n   * Get data of the currently logged user that was returned by the last\n   * call to {@link sdk.User#login} or\n   * {@link sdk.User#getCurrent}. Return null when there\n   * is no user logged in or the data of the current user were not fetched\n   * yet.\n   *\n   * @returns object An Account instance.\n   */\n  public getCachedCurrent() {\n    return this.auth.getCurrentUserData();\n  }\n  /**\n   * Get data of the currently logged access tokern that was returned by the last\n   * call to {@link sdk.User#login}\n   *\n   * @returns object An AccessToken instance.\n   */\n  public getCurrentToken(): AccessToken {\n    return this.auth.getToken();\n  }\n  /**\n   * @name sdk.User#isAuthenticated\n   *\n   * @returns {boolean} True if the current user is authenticated (logged in).\n   */\n  public isAuthenticated() {\n    return !(this.getCurrentId() === '' || this.getCurrentId() == null || this.getCurrentId() == 'null');\n  }\n\n  /**\n   * @name sdk.User#getCurrentId\n   *\n   * @returns object Id of the currently logged-in user or null.\n   */\n  public getCurrentId() {\n    return this.auth.getCurrentUserId();\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `User`.\n   */\n  public getModelName() {\n    return \"User\";\n  }\n}\n","/* tslint:disable */\nexport * from './User';\nexport * from './Message';\nexport * from './SDKModels';\nexport * from './logger.service';\n","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nimport { LoopBackConfig } from '../../lb.config';\n/**\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@johncasarrubias>\n* @module LoggerService\n* @license MIT\n* @description\n* Console Log wrapper that can be disabled in production mode\n**/\n@Injectable()\nexport class LoggerService {\n\n  log(...args: any[]) {\n    if (LoopBackConfig.debuggable())\n    console.log.apply(console, args);\n  }\n\n  info(...args: any[]) {\n    if (LoopBackConfig.debuggable())\n    console.info.apply(console, args);\n  }\n\n  error(...args: any[]) {\n    if (LoopBackConfig.debuggable())\n    console.error.apply(console, args);\n  }\n\n  count(arg: string) {\n    if (LoopBackConfig.debuggable())\n    console.count(arg);\n  }\n\n  group(arg: string) {\n    if (LoopBackConfig.debuggable())\n    console.count(arg);\n  }\n\n  groupEnd() {\n    if (LoopBackConfig.debuggable())\n    console.groupEnd();\n  }\n\n  profile(arg: string) {\n    if (LoopBackConfig.debuggable())\n    console.count(arg);\n  }\n\n  profileEnd() {\n    if (LoopBackConfig.debuggable())\n    console.profileEnd();\n  }\n\n  time(arg: string) {\n    if (LoopBackConfig.debuggable())\n    console.time(arg);\n  }\n\n  timeEnd(arg: string) {\n    if (LoopBackConfig.debuggable())\n    console.timeEnd(arg);\n  }\n}\n","/* tslint:disable */\nexport * from './core/index';\nexport * from './custom/index';\n","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nexport interface CookieInterface { [key: string]: any }\n/**\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@mean-expert-official>\n* @module CookieBrowser\n* @license MIT\n* @description\n* This module handle cookies, it will be provided using DI Swapping according the\n* SDK Socket Driver Available currently supporting Angular 2 for web and NativeScript 2.\n**/\n@Injectable()\nexport class CookieBrowser {\n  /**\n   * @type {CookieInterface}\n   **/\n  private cookies: CookieInterface = {};\n  /**\n   * @method get\n   * @param {string} key Cookie key name\n   * @return {any}\n   * @description\n   * The getter will return any type of data persisted in cookies.\n   **/\n  get(key: string): any {\n    if (!this.cookies[key]) {\n      let cookie = window.document\n                         .cookie.split('; ')\n                         .filter((item: any) => item.split('=')[0] === key).pop();\n      if (!cookie) {\n        return null;\n      }\n\n      this.cookies[key] = this.parse(cookie.split('=').slice(1).join('='));\n    }\n\n    return this.cookies[key];\n  }\n  /**\n   * @method set\n   * @param {string} key Cookie key name\n   * @param {any} value Any value\n   * @param {Date=} expires The date of expiration (Optional)\n   * @return {void}\n   * @description\n   * The setter will return any type of data persisted in cookies.\n   **/\n  set(key: string, value: any, expires?: Date): void {\n    this.cookies[key] = value;\n    let cookie = `${key}=${encodeURI(value)}; path=/${expires ? `; expires=${ expires.toUTCString() }` : ''}`;\n    window.document.cookie = cookie;\n  }\n  /**\n   * @method remove\n   * @param {string} key Cookie key name\n   * @return {void}\n   * @description\n   * This method will remove a cookie from the client.\n   **/\n  remove(key: string) {\n    document.cookie = key + '=; path=/; expires=Thu, 01 Jan 1970 00:00:01 GMT;';\n    delete this.cookies[key];\n  }\n  /**\n   * @method parse\n   * @param {any} value Input data expected to be JSON\n   * @return {void}\n   * @description\n   * This method will parse the string as JSON if possible, otherwise will\n   * return the value itself.\n   **/\n  private parse(value: any) {\n    try {\n        return JSON.parse(decodeURI(value));\n    } catch (e) {\n        return value;\n    }\n  }\n}\n","/* tslint:disable */\nimport { Injectable } from '@angular/core';\n/**\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@mean-expert-official>\n* @module StorageBrowser\n* @license MIT\n* @description\n* This module handle localStorage, it will be provided using DI Swapping according the\n* SDK Socket Driver Available currently supporting Angular 2 for web and NativeScript 2.\n**/\n@Injectable()\nexport class StorageBrowser {\n  /**\n   * @method get\n   * @param {string} key Storage key name\n   * @return {any}\n   * @description\n   * The getter will return any type of data persisted in localStorage.\n   **/\n  get(key: string): any {\n    let data: string = localStorage.getItem(key);\n    return this.parse(data);\n  }\n  /**\n   * @method set\n   * @param {string} key Storage key name\n   * @param {any} value Any value\n   * @return {void}\n   * @description\n   * The setter will return any type of data persisted in localStorage.\n   **/\n  set(key: string, value: any, expires?: Date): void {\n    localStorage.setItem(\n      key,\n      typeof value === 'object' ? JSON.stringify(value) : value\n    );\n  }\n  /**\n   * @method remove\n   * @param {string} key Storage key name\n   * @return {void}\n   * @description\n   * This method will remove a localStorage item from the client.\n   **/\n  remove(key: string): void {\n    if (localStorage[key]) {\n      localStorage.removeItem(key);\n    } else {\n      console.log('Trying to remove unexisting key: ', key);\n    }\n  }\n  /**\n   * @method parse\n   * @param {any} value Input data expected to be JSON\n   * @return {void}\n   * @description\n   * This method will parse the string as JSON if possible, otherwise will\n   * return the value itself.\n   **/\n  private parse(value: any) {\n    try {\n        return JSON.parse(value);\n    } catch (e) {\n        return value;\n    }\n  }\n}\n","/* tslint:disable */\n/**\n * @module Storage\n * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n * @license MIT\n * @description\n * The InternalStorage class is used for dependency injection swapping.\n * It will be provided using factory method from different sources.\n **/\nexport class BaseStorage {\n  /**\n   * @method get\n   * @param {string} key Storage key name\n   * @return {any}\n   * @description\n   * The getter will return any type of data persisted in storage.\n   **/\n  get(key: string): any {}\n  /**\n   * @method set\n   * @param {string} key Storage key name\n   * @param {any} value Any value\n   * @return {void}\n   * @description\n   * The setter will return any type of data persisted in localStorage.\n   **/\n  set(key: string, value: any, expires?: Date): void {}\n  /**\n   * @method remove\n   * @param {string} key Storage key name\n   * @return {void}\n   * @description\n   * This method will remove a localStorage item from the client.\n   **/\n  remove(key: string): void {}\n}\n/**\n * @module InternalStorage\n * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n * @license MIT\n * @description\n * The InternalStorage class is used for dependency injection swapping.\n * It will be provided using factory method from different sources.\n * This is mainly required because Angular Universal integration.\n * It does inject a CookieStorage instead of LocalStorage.\n **/\nexport class InternalStorage extends BaseStorage {}\n/**\n * @module SDKStorage\n * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n * @license MIT\n * @description\n * The SDKStorage class is used for dependency injection swapping.\n * It will be provided using factory method according the right environment.\n * This is created for public usage, to allow persisting custom data\n * Into the local storage API.\n **/\nexport class SDKStorage extends BaseStorage {}\n","import { PageTitleComponent } from './page-title/page-title.component';\nimport { PageContentComponent } from './page-content/page-content.component';\nimport { MsgBubbleComponent } from './msg-bubble/msg-bubble.component';\nimport { PageFooterComponent } from './page-footer/page-footer.component';\n\nexport const commonUiComponents = [\n    PageTitleComponent,\n    PageContentComponent,\n    MsgBubbleComponent,\n    PageFooterComponent\n];","module.exports = \"<div class=\\\"single-message__holder\\\">\\n    <div [ngClass]=\\\"{\\n        'single-message__align--right': isMsgFromMe,\\n        'single-message__align--left': !isMsgFromMe\\n    }\\\">\\n        <div class=\\\"single-message__content\\\">{{ messageObj.content }}</div>\\n        <div class=\\\"single-message__sender\\\">{{ isMsgFromMe? 'You' : messageObj.senderName }}</div>\\n    </div>\\n</div>\"","module.exports = \".single-message__holder {\\n  font-size: 14px;\\n  clear: both; }\\n\\n.single-message__content {\\n  background-color: #86e23c;\\n  white-space: pre-wrap;\\n  position: relative;\\n  border-radius: 5px;\\n  margin-top: 20px;\\n  padding: 10px;\\n  color: #fff; }\\n\\n.single-message__align--left {\\n  margin-left: 8px;\\n  float: left; }\\n\\n.single-message__align--left .single-message__sender {\\n    position: relative;\\n    float: left; }\\n\\n.single-message__align--left .single-message__sender::before {\\n      border-color: transparent #86e23c transparent transparent;\\n      border-style: solid;\\n      position: absolute;\\n      border-width: 8px;\\n      content: \\\"\\\";\\n      height: 0px;\\n      left: -15px;\\n      width: 0px;\\n      top: -32px; }\\n\\n.single-message__align--right {\\n  margin-right: 8px;\\n  float: right; }\\n\\n.single-message__align--right .single-message__sender {\\n    position: relative;\\n    float: right; }\\n\\n.single-message__align--right .single-message__sender::after {\\n      border-color: transparent transparent transparent #86e23c;\\n      border-style: solid;\\n      position: absolute;\\n      border-width: 8px;\\n      content: \\\"\\\";\\n      height: 0px;\\n      left: 26px;\\n      width: 0px;\\n      top: -32px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYW50ei5kZXYvRGVza3RvcC9wcm9qZWN0cy9fcGVyc29uYWwvbGlnLW1lc3NhZ2luZy1leGFtL2FuZ3VsYXIvc3JjL2FwcC9jb21tb24tdWkvbXNnLWJ1YmJsZS9tc2ctYnViYmxlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVJO0VBQ0ksZUFBZTtFQUNmLFdBQVcsRUFBQTs7QUFHZjtFQUNJLHlCQUFtQztFQUNuQyxxQkFBcUI7RUFDckIsa0JBQWtCO0VBQ2xCLGtCQUFrQjtFQUNsQixnQkFBZ0I7RUFDaEIsYUFBYTtFQUNiLFdBQVcsRUFBQTs7QUFHZjtFQUNJLGdCQUFnQjtFQUNoQixXQUFXLEVBQUE7O0FBRmQ7SUFLTyxrQkFBa0I7SUFDbEIsV0FBVyxFQUFBOztBQU5sQjtNQVNXLHlEQUFtRTtNQUNuRSxtQkFBbUI7TUFDbkIsa0JBQWtCO01BQ2xCLGlCQUFpQjtNQUNqQixXQUFXO01BQ1gsV0FBVztNQUNYLFdBQVc7TUFDWCxVQUFVO01BQ1YsVUFBVSxFQUFBOztBQUt0QjtFQUNJLGlCQUFpQjtFQUNqQixZQUFZLEVBQUE7O0FBRmY7SUFLTyxrQkFBa0I7SUFDbEIsWUFBWSxFQUFBOztBQU5uQjtNQVNXLHlEQUFtRTtNQUNuRSxtQkFBbUI7TUFDbkIsa0JBQWtCO01BQ2xCLGlCQUFpQjtNQUNqQixXQUFXO01BQ1gsV0FBVztNQUNYLFVBQVU7TUFDVixVQUFVO01BQ1YsVUFBVSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvY29tbW9uLXVpL21zZy1idWJibGUvbXNnLWJ1YmJsZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5zaW5nbGUtbWVzc2FnZSB7XG5cbiAgICAmX19ob2xkZXIge1xuICAgICAgICBmb250LXNpemU6IDE0cHg7XG4gICAgICAgIGNsZWFyOiBib3RoO1xuICAgIH1cblxuICAgICZfX2NvbnRlbnQge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMTM0LCAyMjYsIDYwKTtcbiAgICAgICAgd2hpdGUtc3BhY2U6IHByZS13cmFwO1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgICAgICAgbWFyZ2luLXRvcDogMjBweDtcbiAgICAgICAgcGFkZGluZzogMTBweDtcbiAgICAgICAgY29sb3I6ICNmZmY7XG4gICAgfVxuXG4gICAgJl9fYWxpZ24tLWxlZnQge1xuICAgICAgICBtYXJnaW4tbGVmdDogOHB4O1xuICAgICAgICBmbG9hdDogbGVmdDtcblxuICAgICAgICAuc2luZ2xlLW1lc3NhZ2VfX3NlbmRlciB7XG4gICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgICAgICBmbG9hdDogbGVmdDtcbiAgICBcbiAgICAgICAgICAgICY6OmJlZm9yZSB7XG4gICAgICAgICAgICAgICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudCByZ2IoMTM0LCAyMjYsIDYwKSB0cmFuc3BhcmVudCB0cmFuc3BhcmVudDtcbiAgICAgICAgICAgICAgICBib3JkZXItc3R5bGU6IHNvbGlkO1xuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgICAgICBib3JkZXItd2lkdGg6IDhweDtcbiAgICAgICAgICAgICAgICBjb250ZW50OiBcIlwiO1xuICAgICAgICAgICAgICAgIGhlaWdodDogMHB4O1xuICAgICAgICAgICAgICAgIGxlZnQ6IC0xNXB4O1xuICAgICAgICAgICAgICAgIHdpZHRoOiAwcHg7XG4gICAgICAgICAgICAgICAgdG9wOiAtMzJweDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgICZfX2FsaWduLS1yaWdodCB7XG4gICAgICAgIG1hcmdpbi1yaWdodDogOHB4O1xuICAgICAgICBmbG9hdDogcmlnaHQ7XG5cbiAgICAgICAgLnNpbmdsZS1tZXNzYWdlX19zZW5kZXIge1xuICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICAgICAgZmxvYXQ6IHJpZ2h0O1xuICAgIFxuICAgICAgICAgICAgJjo6YWZ0ZXIge1xuICAgICAgICAgICAgICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgcmdiKDEzNCwgMjI2LCA2MCk7XG4gICAgICAgICAgICAgICAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICAgICAgYm9yZGVyLXdpZHRoOiA4cHg7XG4gICAgICAgICAgICAgICAgY29udGVudDogXCJcIjtcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDBweDtcbiAgICAgICAgICAgICAgICBsZWZ0OiAyNnB4O1xuICAgICAgICAgICAgICAgIHdpZHRoOiAwcHg7XG4gICAgICAgICAgICAgICAgdG9wOiAtMzJweDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn0iXX0= */\"","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-msg-bubble',\n  templateUrl: './msg-bubble.component.html',\n  styleUrls: ['./msg-bubble.component.scss']\n})\nexport class MsgBubbleComponent implements OnInit {\n\n  @Input() messageObj;\n  @Input() isMsgFromMe;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"message-compose__holder\\\" #computeHeight>\\n  <form (ngSubmit)=\\\"sendMessage()\\\" class=\\\"message-compose__form\\\">\\n      <input type=\\\"text\\\" name=\\\"message\\\" [(ngModel)]=\\\"newMessage\\\" placeholder=\\\"Start a new message\\\" class=\\\"form__input message-compose__input\\\">\\n      <button class=\\\"form__button form__button--dark form__button--pull-right message-compose__button\\\">send</button>\\n  </form>\\n</div>\"","module.exports = \".message-compose__form {\\n  display: flex;\\n  padding: 10px; }\\n\\n.message-compose__input {\\n  flex: 1;\\n  margin: 0;\\n  margin-right: 10px; }\\n\\n.message-compose__button {\\n  margin: 0; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYW50ei5kZXYvRGVza3RvcC9wcm9qZWN0cy9fcGVyc29uYWwvbGlnLW1lc3NhZ2luZy1leGFtL2FuZ3VsYXIvc3JjL2FwcC9jb21tb24tdWkvbXNnLWNvbXBvc2UvbXNnLWNvbXBvc2UuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUk7RUFDSSxhQUFhO0VBQ2IsYUFBYSxFQUFBOztBQUdqQjtFQUNJLE9BQU87RUFDUCxTQUFTO0VBQ1Qsa0JBQWtCLEVBQUE7O0FBR3RCO0VBQ0ksU0FBUyxFQUFBIiwiZmlsZSI6InNyYy9hcHAvY29tbW9uLXVpL21zZy1jb21wb3NlL21zZy1jb21wb3NlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1lc3NhZ2UtY29tcG9zZSB7XG5cbiAgICAmX19mb3JtIHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgcGFkZGluZzogMTBweDtcbiAgICB9XG5cbiAgICAmX19pbnB1dCB7XG4gICAgICAgIGZsZXg6IDE7XG4gICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xuICAgIH1cblxuICAgICZfX2J1dHRvbiB7XG4gICAgICAgIG1hcmdpbjogMDtcbiAgICB9XG59Il19 */\"","import { Component, OnInit, Output, EventEmitter, ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'app-msg-compose',\n  templateUrl: './msg-compose.component.html',\n  styleUrls: ['./msg-compose.component.scss']\n})\nexport class MsgComposeComponent implements OnInit {\n\n  newMessage;\n\n  @Output() newMsgEvent = new EventEmitter();\n\n  @Output() elemHeightReporter = new EventEmitter();\n\n  @ViewChild('computeHeight') computeHeight;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  ngAfterViewInit() {\n    let elem = this.computeHeight.nativeElement;\n    this.elemHeightReporter.emit(elem.offsetHeight);\n  }\n\n  sendMessage() {\n    if(!this.newMessage) return;\n    this.newMsgEvent.emit(this.newMessage);\n    this.newMessage = '';\n  }\n}\n","module.exports = \"<div class=\\\"page-content__holder\\\">\\n    <ng-content></ng-content>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbW1vbi11aS9wYWdlLWNvbnRlbnQvcGFnZS1jb250ZW50LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-content',\n  templateUrl: './page-content.component.html',\n  styleUrls: ['./page-content.component.scss']\n})\nexport class PageContentComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div [ngClass]=\\\"{'general__position--fixedBottom': fixedAtBottom}\\\">\\n    <div class=\\\"page-footer__holder\\\">\\n        <ng-content></ng-content>\\n    </div>\\n</div>\"","module.exports = \".page-footer__holder {\\n  border-top: 1px solid #ccd6dd; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYW50ei5kZXYvRGVza3RvcC9wcm9qZWN0cy9fcGVyc29uYWwvbGlnLW1lc3NhZ2luZy1leGFtL2FuZ3VsYXIvc3JjL2FwcC9jb21tb24tdWkvcGFnZS1mb290ZXIvcGFnZS1mb290ZXIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUk7RUFDSSw2QkFBd0MsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2NvbW1vbi11aS9wYWdlLWZvb3Rlci9wYWdlLWZvb3Rlci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5wYWdlLWZvb3RlciB7XG5cbiAgICAmX19ob2xkZXIge1xuICAgICAgICBib3JkZXItdG9wOiAxcHggc29saWQgcmdiKDIwNCwgMjE0LCAyMjEpO1xuICAgIH1cbn0iXX0= */\"","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-page-footer',\n  templateUrl: './page-footer.component.html',\n  styleUrls: ['./page-footer.component.scss']\n})\nexport class PageFooterComponent implements OnInit {\n\n  @Input() fixedAtBottom;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"page-header__holder\\\" #headerHolder>\\n    <div class=\\\"page-header__title\\\">Chat app</div>\\n    <ng-content></ng-content>\\n</div>\"","module.exports = \".page-header__holder {\\n  border-bottom: 1px solid #ccd6dd;\\n  padding: 15px; }\\n\\n.page-header__title {\\n  text-align: center;\\n  font-weight: bold;\\n  color: #515151;\\n  font-size: 16px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYW50ei5kZXYvRGVza3RvcC9wcm9qZWN0cy9fcGVyc29uYWwvbGlnLW1lc3NhZ2luZy1leGFtL2FuZ3VsYXIvc3JjL2FwcC9jb21tb24tdWkvcGFnZS10aXRsZS9wYWdlLXRpdGxlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVJO0VBQ0ksZ0NBQTJDO0VBQzNDLGFBQWEsRUFBQTs7QUFHakI7RUFDSSxrQkFBa0I7RUFDbEIsaUJBQWlCO0VBQ2pCLGNBQWM7RUFDZCxlQUFlLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9jb21tb24tdWkvcGFnZS10aXRsZS9wYWdlLXRpdGxlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnBhZ2UtaGVhZGVyIHtcblxuICAgICZfX2hvbGRlciB7XG4gICAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCByZ2IoMjA0LCAyMTQsIDIyMSk7XG4gICAgICAgIHBhZGRpbmc6IDE1cHg7XG4gICAgfVxuXG4gICAgJl9fdGl0bGUge1xuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgICAgICBjb2xvcjogIzUxNTE1MTtcbiAgICAgICAgZm9udC1zaXplOiAxNnB4O1xuICAgIH1cbn0iXX0= */\"","import { Component, OnInit, Output, EventEmitter, ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'app-page-title',\n  templateUrl: './page-title.component.html',\n  styleUrls: ['./page-title.component.scss']\n})\nexport class PageTitleComponent implements OnInit {\n\n  @Output() headerHeightReporter = new EventEmitter();\n\n  @ViewChild('headerHolder') headerHolder;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  ngAfterViewInit() {\n    let elem = this.headerHolder.nativeElement;\n    this.headerHeightReporter.emit(elem.offsetHeight);\n  }\n\n}\n","module.exports = \"<app-page-title></app-page-title>\\n\\n<app-page-content>\\n  <div class=\\\"general__padding--10\\\">\\n      <form (ngSubmit)=\\\"submitForm()\\\">\\n          <fieldset>\\n            <input class=\\\"form__input\\\" [(ngModel)]=\\\"credentials.username\\\" name=\\\"username\\\" type=\\\"text\\\" placeholder=\\\"User name\\\" (focus)=\\\"changeFormError()\\\">\\n            <input class=\\\"form__input\\\" [(ngModel)]=\\\"credentials.password\\\" name=\\\"password\\\" type=\\\"password\\\" placeholder=\\\"password\\\" (focus)=\\\"changeFormError()\\\">\\n            <div [ngClass]=\\\"{form__errors: submitError}\\\">{{ submitError }}</div>\\n            <button class=\\\"form__button\\\">Sign up / Log in</button>\\n          </fieldset>\\n          <p class=\\\"form__extra-text\\\">By signing up, you agree to the Terms of Service and Privacy Policy, including Cookie Use. Others will be able to find you by searching for your email address or phone number when provided.</p>\\n        </form>\\n  </div>\\n</app-page-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserApi } from 'src/app/backend-sdk';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  credentials = {\n    username: '',\n    password: ''\n  };\n  submitError = '';\n\n  constructor(private userApi: UserApi, private router: Router) { }\n\n  ngOnInit() {\n      let isAuthenticated = this.userApi.isAuthenticated();\n      if(isAuthenticated) this.router.navigate(['messaging']);\n  }\n\n  changeFormError(msg = ''){\n    this.submitError = msg;\n  }\n\n  validateForm() {\n    this.changeFormError();\n    let valid = this.credentials.username && this.credentials.password;\n    if(!valid) this.submitError = \"* User name and password fields are required\";\n    return valid;\n  }\n\n  submitForm(){\n    if(!this.validateForm()) return;\n    let test = this.userApi.login(this.credentials).subscribe(\n      this.loginSuccess.bind(this),\n      this.loginError.bind(this)\n    );\n  }\n\n  loginSuccess(token){\n    this.router.navigate(['messaging']);\n  }\n\n  loginError(error){\n    switch(error.code) {\n      case \"LOGIN_FAILED\":\n        this.signUp();\n        break;\n      default:\n        this.changeFormError(error.message);\n    }\n  }\n\n  signUp(){\n    let credentials = Object.assign({}, this.credentials);\n    credentials['email'] = credentials.username+'@'+credentials.username+'.com'; // Loopback framework requires email\n    this.userApi.create(credentials).subscribe(\n      this.submitForm.bind(this),\n      this.signUpError.bind(this)\n    );\n  }\n\n  signUpError(error){\n    let userExists = error.message.includes(\"User already exists\");\n    if(userExists) this.changeFormError(\"* Incorrect User name or password\");\n    else this.changeFormError(error.message);\n  }\n\n}\n","module.exports = \"<app-page-title (headerHeightReporter)=\\\"receivedHeaderHeightHandler($event)\\\">\\n  <button class=\\\"form__button form__button--dark form__button--pull-right\\\" (click)=\\\"logOut()\\\">Log out</button>\\n</app-page-title>\\n\\n<app-page-content>\\n  <div class=\\\"messages__holder general__padding--5\\\" [style.height]=\\\"computeRemainingHeight()+'px'\\\" #autoScrollToBottom (scroll)=\\\"onScroll()\\\">\\n    <div *ngFor=\\\"let messageObj of messagesObj\\\">\\n      <app-msg-bubble [messageObj]=\\\"messageObj\\\" [isMsgFromMe]=\\\"isMsgFromMe(messageObj)\\\"></app-msg-bubble>\\n    </div>\\n  </div>\\n</app-page-content>\\n\\n<app-page-footer [fixedAtBottom]=\\\"true\\\">\\n  <app-msg-compose (newMsgEvent)=\\\"newMsgEventHandler($event)\\\" (elemHeightReporter)=\\\"receivedFooterHeightHandler($event)\\\"></app-msg-compose>\\n</app-page-footer>\"","module.exports = \".messages__holder {\\n  scroll-behavior: smooth;\\n  position: relative;\\n  overflow-x: hidden;\\n  overflow-y: auto; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYW50ei5kZXYvRGVza3RvcC9wcm9qZWN0cy9fcGVyc29uYWwvbGlnLW1lc3NhZ2luZy1leGFtL2FuZ3VsYXIvc3JjL2FwcC9wYWdlcy9tZXNzYWdpbmcvbWVzc2FnaW5nLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVJO0VBQ0ksdUJBQXVCO0VBQ3ZCLGtCQUFrQjtFQUNsQixrQkFBa0I7RUFDbEIsZ0JBQWdCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9tZXNzYWdpbmcvbWVzc2FnaW5nLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1lc3NhZ2VzIHtcblxuICAgICZfX2hvbGRlciB7XG4gICAgICAgIHNjcm9sbC1iZWhhdmlvcjogc21vb3RoO1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgIG92ZXJmbG93LXg6IGhpZGRlbjtcbiAgICAgICAgb3ZlcmZsb3cteTogYXV0bztcbiAgICB9XG59Il19 */\"","import { UserApi, MessageApi } from 'src/app/backend-sdk';\nimport { Component, OnInit, HostListener, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-messaging',\n  templateUrl: './messaging.component.html',\n  styleUrls: ['./messaging.component.scss']\n})\nexport class MessagingComponent implements OnInit {\n\n  loggedInUserId;\n  loggedInUserObjAsync;\n\n  messagesObj;\n\n  innerHeight = 0;\n  bodyMargins = 10;\n  headerHolderHeight = 0;\n  footerHolderHeight = 0;\n\n  disableScrollDown = false;\n  @ViewChild('autoScrollToBottom') autoScrollToBottom;\n\n  constructor(private userApi: UserApi, private messageApi: MessageApi, private router: Router) {\n  }\n\n  ngOnInit() {\n    this.onResize({});\n    let isAuthenticated = this.userApi.isAuthenticated();\n    if(!isAuthenticated) this.router.navigate(['login']);\n    this.loggedInUserId = this.userApi.getCurrentId();\n    this.userApi.getCurrent().subscribe(userInfo => this.loggedInUserObjAsync = userInfo);\n    setInterval(this.getMessages.bind(this), 1000); // TODO: cancel Interval\n    this.getMessages();\n  }\n\n  ngAfterViewChecked() {\n    this.scrollToBottom();\n  }\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event) {\n    this.innerHeight = window.innerHeight;\n  }\n  \n  receivedHeaderHeightHandler(height) {\n    this.headerHolderHeight = height;\n  }\n\n  receivedFooterHeightHandler(height) {\n    this.footerHolderHeight = height;\n  }\n\n  computeRemainingHeight() {\n    return this.innerHeight - this.headerHolderHeight - this.footerHolderHeight - this.bodyMargins;\n  }\n\n  onScroll() {\n    let elem = this.autoScrollToBottom.nativeElement;\n    let atBottom = elem.scrollHeight - elem.scrollTop === elem.clientHeight;\n    this.disableScrollDown = !atBottom;\n  }\n\n  scrollToBottom() {\n  if (this.disableScrollDown) return;\n    try {\n      let elem = this.autoScrollToBottom.nativeElement;\n      elem.scrollTop = elem.scrollHeight;\n    } catch(err) { }\n  }\n\n  logOut() {\n    this.userApi.logout();\n    this.ngOnInit();\n  }\n\n  getMessages() {\n    this.messageApi.find().subscribe(messages => this.messagesObj = messages);\n    this.scrollToBottom();\n  }\n\n  isMsgFromMe(messageObj) {\n    return messageObj.senderId === this.loggedInUserId;\n  }\n\n  newMsgEventHandler(msgContent) {\n    this.messageApi.create({\n      \"content\": msgContent,\n      \"senderId\": this.loggedInUserId,\n      \"senderName\": this.loggedInUserObjAsync.username,\n      \"sentOn\": new Date().toISOString(),\n      \"id\": null\n    }).subscribe();\n  }\n\n}\n","module.exports = \"<app-page-title></app-page-title>\\n\\n<app-page-content>\\n    <h3>Page Not Found | 404</h3>\\n</app-page-content>\"","module.exports = \"h3 {\\n  text-align: center; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYW50ei5kZXYvRGVza3RvcC9wcm9qZWN0cy9fcGVyc29uYWwvbGlnLW1lc3NhZ2luZy1leGFtL2FuZ3VsYXIvc3JjL2FwcC9wYWdlcy9wYWdlLW5vdC1mb3VuZC9wYWdlLW5vdC1mb3VuZC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUFLLGtCQUFrQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvcGFnZS1ub3QtZm91bmQvcGFnZS1ub3QtZm91bmQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJoMyB7IHRleHQtYWxpZ246IGNlbnRlcjsgfSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.scss']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}